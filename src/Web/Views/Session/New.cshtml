@using Web.Extensions
@{
    ViewBag.Title = "Create new session";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.GMaps().Scripts()

<script type="text/javascript">
    var map = null;
    var geocoder = null;
    var centerOfTheWorld = new GLatLng(42.766543, 65.742188);
    var defaultZoom = 13;

    // we use this to collect markers, so we can remove them from the map again
    var markers = [];

    // http://maps.google.com/maps?f=q&source=s_q&hl=da&geocode=&q=%C3%85rhus,+Denmark&aq=0&sll=37.0625,-95.677068&sspn=42.766543,65.742188&ie=UTF8&hq=&hnear=%C3%85rhus,+Danmark&z=12

    function getPoint() {
        return {
            lat: $('#lat').val(), 
            lng: $('#lng').val() 
        };
    }

    function setPoint(point) {
        $('#lat').val(point.lat);
        $('#lng').val(point.lng);
    }

    function initialize(coords) {
        if (GBrowserIsCompatible()) {
            map = new GMap2(document.getElementById("map_canvas"));
            geocoder = new GClientGeocoder();
            map.addControl(new GSmallMapControl());

            if (coords) {
                map.setCenter(new GLatLng(coords.lat, coords.lng), defaultZoom);
                showPosition({ latitude: coords.lat, longitude: coords.lng });
            } else {
                map.setCenter(centerOfTheWorld, defaultZoom);
            }
        } else {
            $('#geoStuff').hide();
        }
    }

    function clearMarkers() {
        for (i in markers) {
            map.removeOverlay(markers[i]);
        }
        markers.length = 0;
    }

    function createAndSetMarker(point) {
        var marker = new GMarker(point, { draggable: true });
        markers.push(marker);

        map.addOverlay(marker);
        map.setCenter(point);

        GEvent.addListener(marker, "dragend", function (newCoords) {
            showPosition({ latitude: newCoords.lat(), longitude: newCoords.lng() });
        });

        setPoint({ lat: point.lat(), lng: point.lng() });
    }

    function showPosition(coords) {
        clearMarkers();

        var lat = coords.latitude;
        var lng = coords.longitude;
        var point = new GLatLng(lat, lng);

        createAndSetMarker(point);

        if (!geocoder) return;

        geocoder.getLocations(point, function (response) {
            if (!response || response.Status.code != 200) {
                $('#noAutoGeocode').show();
                $('#autoGeocode').hide();
            } else {
                var placemark = response.Placemark[0];
                $('#addressText').val(placemark.address);
                
                $('#autoGeocode').show();
                $('#noAutoGeocode').hide();
            }
        });
    }

    function showAddress(address) {
        if (!geocoder) return;

        geocoder.getLatLng(address, function (point) {
            if (!point) {
                alert(address + " not found");
            } else {
                createAndSetMarker(point);
            }
        });
    }

    function isNumberNotZero(o) {
        return !isNaN(o - 0) && o != 0;
    }

    $(function () {
        var point = getPoint();

        if (isNumberNotZero(point.lat)) {
            initialize(point);
            return;
        } else if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                showPosition(position.coords);

                $('#headline').focus();
            }, function () {
                alert('could not determine position!');
            });
        }

        $('#headline').focus();

        initialize();
    });

    function showCurrentAddress() {
        var addressText = $('#addressText').val();
        clearMarkers();
        showAddress(addressText);
    }
</script>

<form action="@Url.Action("new", "session")" method="post">
    <fieldset>
        <p>Give your PriorityQ a short headline so your participants will know which one to pick:</p>
        
        <p>
            @Html.TextBox("headline")
        </p>

        <div class="geoStuff">
            <div id="noAutoGeocode">
                <p>You should pick a location for the session, so your participants will be able to find it more easily.</p>
            </div>
        
            <div id="autoGeocode" class="hidden">
                <p>We have made our best effort to guess your current location, but it may not be entirely correct.</p>
            </div>

            <p> 
                <input type="text" id="addressText" size="45" /> 
                <button onclick="showCurrentAddress(); return false;">Search...</button> 
            </p> 

            <div id="map_canvas" />
        </div>

        @Html.Hidden("lat")
        @Html.Hidden("lng")

        <p>
            This session will expire @Html.TextBox("expirationHours") hours from now.
        </p>
        
        <p>
            <input type="submit" value="Create this session..." class="button" />
        </p>

    </fieldset>
</form>